// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: grpc.proto

package proto

import (
	"golang.org/x/net/context"
	"google.golang.org/grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务端请求的数据结构
type SingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SingleRequest) Reset() {
	*x = SingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRequest) ProtoMessage() {}

func (x *SingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRequest.ProtoReflect.Descriptor instead.
func (*SingleRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *SingleRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 服务端响应的数据结构
type SingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SingleResponse) Reset() {
	*x = SingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleResponse) ProtoMessage() {}

func (x *SingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleResponse.ProtoReflect.Descriptor instead.
func (*SingleResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *SingleResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SingleResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_grpc_proto protoreflect.FileDescriptor

var file_grpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x0d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa7, 0x02, 0x0a, 0x11, 0x49,
	0x47, 0x72, 0x70, 0x63, 0x53, 0x74, 0x72, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x12, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x52, 0x65, 0x71, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x44,
	0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData = file_grpc_proto_rawDesc
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_rawDescData)
	})
	return file_grpc_proto_rawDescData
}

var file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grpc_proto_goTypes = []interface{}{
	(*SingleRequest)(nil),  // 0: proto.SingleRequest
	(*SingleResponse)(nil), // 1: proto.SingleResponse
}
var file_grpc_proto_depIdxs = []int32{
	0, // 0: proto.IGrpcStremService.SingleReqSingleResp:input_type -> proto.SingleRequest
	0, // 1: proto.IGrpcStremService.SingleReqMultiResp:input_type -> proto.SingleRequest
	0, // 2: proto.IGrpcStremService.MultiReqSingleResp:input_type -> proto.SingleRequest
	0, // 3: proto.IGrpcStremService.MultiReqMultiResp:input_type -> proto.SingleRequest
	1, // 4: proto.IGrpcStremService.SingleReqSingleResp:output_type -> proto.SingleResponse
	1, // 5: proto.IGrpcStremService.SingleReqMultiResp:output_type -> proto.SingleResponse
	1, // 6: proto.IGrpcStremService.MultiReqSingleResp:output_type -> proto.SingleResponse
	1, // 7: proto.IGrpcStremService.MultiReqMultiResp:output_type -> proto.SingleResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_rawDesc = nil
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}



// ---- clinet ------
type IGrpcStremService_MultiReqSingleRespClient interface {
	Send(*SingleRequest) error
	CloseAndRecv() (*SingleResponse, error)
	Recv() (*SingleResponse, error)
	grpc.ClientStream
}

type iGrpcStremServiceMultiReqSingleRespClient struct {
	grpc.ClientStream
}

func (x *iGrpcStremServiceMultiReqSingleRespClient) Send(m *SingleRequest) error {
	return x.ClientStream.SendMsg(m)
}
func (x *iGrpcStremServiceMultiReqSingleRespClient) CloseAndRecv() (*SingleResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SingleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *iGrpcStremServiceMultiReqSingleRespClient) Recv() (*SingleResponse, error) {
	m := new(SingleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

type IGrpcStremServiceClient interface {
	// 双向流式 ：集合请求，集合响应
	MultiReqMultiResp(ctx context.Context, opts ...grpc.CallOption) (IGrpcStremService_MultiReqSingleRespClient, error)
}

type iGrpcStremServiceClient struct {
	cc *grpc.ClientConn
}

func (c *iGrpcStremServiceClient) MultiReqMultiResp(ctx context.Context, opts ...grpc.CallOption) (IGrpcStremService_MultiReqSingleRespClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IGrpcStremService_serviceDesc.Streams[0], "/IGrpcStremService/MultiReqMultiResp", opts...)
	if err != nil {
		return nil, err
	}
	x := &iGrpcStremServiceMultiReqSingleRespClient{stream}
	return x, nil
}



func NewIGrpcStremServiceClient(cc *grpc.ClientConn) IGrpcStremServiceClient {
	return &iGrpcStremServiceClient{cc}
}





// ----- server ------
type IGrpcStremService_MultiReqMultiRespServer interface {
	Send(*SingleResponse) error
	Recv() (*SingleRequest, error)
	grpc.ServerStream
}

type IGrpcStremServiceServer interface {
	// 双向流式 ：集合请求，集合响应
	MultiReqMultiResp(IGrpcStremService_MultiReqMultiRespServer) error
}

type iGrpcStremServiceMultiReqMultiRespServer struct {
	grpc.ServerStream
}

func (x *iGrpcStremServiceMultiReqMultiRespServer) Send(m *SingleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *iGrpcStremServiceMultiReqMultiRespServer) Recv() (*SingleRequest, error) {
	m := new(SingleRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// 注册
func RegisterIGrpcStremServiceServer(s *grpc.Server, srv IGrpcStremServiceServer) {
	s.RegisterService(&_IGrpcStremService_serviceDesc, srv)
}

var _IGrpcStremService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IGrpcStremService",
	HandlerType: (*IGrpcStremServiceServer)(nil),
	//Methods: []grpc.MethodDesc{
	//	{
	//		MethodName: "SingleReqSingleResp",
	//		Handler:    _IGrpcStremService_SingleReqSingleResp_Handler,
	//	},
	//},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MultiReqMultiResp",
			Handler:       _IGrpcStremService_MultiReqMultiResp_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "grpcstream.proto",
}

func _IGrpcStremService_MultiReqMultiResp_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IGrpcStremServiceServer).MultiReqMultiResp(&iGrpcStremServiceMultiReqMultiRespServer{stream})
}